[gcode_macro TOOLCHANGE_DEMO]
gcode:
    {% for n in range(20) %}
      T{ printer.toolchanger.tool_numbers | random }
    {% endfor %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z

[gcode_macro PRINT_STATUS]
gcode: 
  RESPOND TYPE='echo' MSG="Status for M190 {params.OBJ} is { printer[params.OBJ] }"
#python:
#  gcode.RESPOND(TYPE='echo', MSG=f"Status for M190 {params.OBJ} is { printer[params.OBJ] }")

[gcode_macro _PARK_ON_COOLING_PAD]
gcode:
  G90 ; Absolute positioning
  G0 X118 Y-4.5 Z5 F5000
  G0 Z0 F600

[gcode_macro _CLEAN_NOZZLE]
description: Clean nozzle on nozzle cleaning pad.
gcode:
  G90
  RESPOND TYPE=echo MSG="Cleaning nozzle"
  {% set heater =  printer.toolhead.extruder %}
  M104 S{params.TEMP}
  
  G0 X160 Y100 F5000
  G0 X160 Y-4.5 Z5 F5000
  TEMPERATURE_WAIT SENSOR={heater} MINIMUM={params.TEMP}
  M104 S0 # Set temp to 0
  G0 Z0.5
  G0 X120 F5000
  G0 X155 F5000
  G0 X124 F5000
  G0 X121 F5000
  G0 X118 Z1 F5000
  G0 Z0 F600
  TEMPERATURE_WAIT SENSOR={heater} MAXIMUM=120
  G0 Z20
  G0 Y20

[gcode_macro _WIPE_NOZZLE]
description: Wipe the nozzle on the pad
gcode:
  G90     
  G0 X160 Y-4.5 Z5 F5000
  G0 Z0.5
  G0 X120 F5000
  G0 X155 F5000
  G0 X124 F5000
  G0 X121 F5000
  G0 X118 Z1 F5000
  G0 Z-0.3 F60
  G0 Z5 F600

[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 100mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=100
  G0 Z0 F600
  M84

[gcode_macro UNSAFE_RAISE_BED]
description: Raise the bed 100mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z100 F600
  M84

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    # initial homing
    G32                             # home all axes
    G90                             # Absolute position
    G1 Z50 F3000                    # move nozzle away from bed

    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    # heat up the bed
    STATUS_HEATING                  # Sets SB-leds to heating-mode
    M140 S{bedtemp}                 # set bed temp
    M190 S{bedtemp}                 # wait for bed

    # brush nozzle
    # BRUSH_NOZZLE

    # level the bed
    STATUS_LEVELING                 # Sets SB-leds to leveling-mode
    QUAD_GANTRY_LEVEL
    G32                             # home all axes

    # perform meshing
    STATUS_MESHING                  # Sets SB-leds to bed mesh-mode
    BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} FORCE_NEW_MESH=True

    # heat up the nozzle
    STATUS_HEATING                  # Sets SB-leds to heating-mode
    M104 S{hotendtemp}              # set hotend temp
    M109 S{hotendtemp}              # wait for hotend temp

    # brush nozzle
    # BRUSH_NOZZLE

    # Gets ready to print by doing a purge line and updating the SB-leds
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    G0 X{x_wait - 50} Y15 F10000                     # Moves to starting point
    G0 Z0.4                                          # Raises Z to 0.4
    G91                                              # Incremental positioning 
    G1 X100 E20 F1000                                # Purge line
    G90                                              # Absolut position


# ###############################################################
# ###############################################################
# ABOVE IS THE OLD VERSION BEFORE TOOLCHANGER STUFF, SAVE FOR NOW
# ###############################################################
# ###############################################################

# [gcode_macro PRINT_START]
# variable_printing: False
# gcode:
#   SET_LED LED=led RED=1 GREEN=0.4 BLUE=0
#   M140 S{ params.BED_TEMP }

#   M117 initializing  
#   SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
#   INITIALIZE_TOOLCHANGER
#   M117 homing
#   G28
#   M117 Cleaning the nozzle
#   _CLEAN_NOZZLE TEMP={ params.TOOL_TEMP|int - 30 }

#   M117 Heating up the bed
#   # TEMPERATURE_WAIT SENSOR="temperature_fan buildplate" MINIMUM={ [ params.BED_TEMP|float * 0.94, params.BED_TEMP|float - 6.0 ] |min }
#   M190 S{ params.BED_TEMP }

#   M117 Calibrating bed
#   M109 S150 ; Heat up nozzle to soften any leftover filament for homing.
#   G32 ; Home, gantry tram
#   BED_MESH_PROFILE LOAD=default 
#   M109 S0 # Stop to heat, the actual printing may happen with a different hotend.

#   M117 Heating up the hotends
#   # Preheat all the hotends in use
#   {% for tool_nr in printer.toolchanger.tool_numbers %}
#     {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
#     {% if tooltemp_param in params %}
#       M104 T{tool_nr} S{params[tooltemp_param]}
#     {% endif %}
#   {% endfor %}

#   M117 Parking on cooling pad
#   _PARK_ON_COOLING_PAD
#   {% if params.TOOL is defined %}
#     T{params.TOOL}
#   {% endif %}
  
#   M109 S{ params.TOOL_TEMP }
#   G0 Z2 F300 ;Move up a bit
#   G92 E0 ; Zero extruder
#   #START_TOOL_PROBE_CRASH_DETECTION
#   ;SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=True
#   M117 Printing
#   SET_LED LED=led RED=0.7 GREEN=0.7 BLUE=0.5



# [gcode_macro PRINT_END]
# #   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
# gcode:
#     SAVE_GCODE_STATE NAME=STATE_PRINT_END

#     M400                           ; wait for buffer to clear
#     G92 E0                         ; zero the extruder
#     G1 E-10.0 F3600                ; retract filament

#     G91                            ; relative positioning
#     G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
#     TURN_OFF_HEATERS
#     M107                           ; turn off fan
#     G1 Z2 F3000                    ; move nozzle up 2mm
#     G90                            ; absolute positioning
#     G0  X125 Y250 F3600            ; park nozzle at rear
#     BED_MESH_CLEAR
    
#     # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
#     # command pair is to restore the printer's coordinate system
#     # and speed settings since the commands above change them.
#     # However, to prevent any accidental, unintentional toolhead
#     # moves when restoring the state, explicitly set MOVE=0.
#     RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


# ###############################################################
# ###############################################################
# ABOVE IS THE OLD VERSION BEFORE TOOLCHANGER STUFF, SAVE FOR NOW
# ###############################################################
# ###############################################################


[gcode_macro PRINT_END]
gcode:
    STOP_TOOL_PROBE_CRASH_DETECTION
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament

    G91                            ; relative positioning
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 20) %}
        {% set z_safe = 20.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    G0 Z{z_safe} F3600             ; move nozzle up

    TURN_OFF_HEATERS
    M107                           ; turn off fan
    M140                           ; turn off bed

    G90                            ; absolute positioning
    {% set tool = printer[printer.toolchanger.tool] %}
    G0 X{tool.params_park_x} Y{tool.params_safe_y} Z300 F3600          ; park nozzle up top
    M18                            ; Motors off
    M117 Print done
    SET_LED LED=led RED=0 GREEN=0 BLUE=0


[gcode_macro CHANGE_NOZZLE]
gcode:
  M117 Nozzle change
  M104 S240
  G90 ; Absolute pos
  G1 X175 Y0 Z100 F1800 ; Move to front
  M109 S240 ;Heat up the filament
  M83                            ; set extruder to relative
  G1 E5 F250                   ; extrude 5 mm
  G1 E-50 F1000                ; retract 5 cm
  M82                            ; set extruder to absolute
  M117 Ready to swap